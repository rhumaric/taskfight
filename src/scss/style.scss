@font-face {
  font-family: 'EvelethClean';
  src:  url('fonts/evelethclean-webfont.woff2') format('woff2'),
        url('fonts/evelethclean-webfont.woff') format('woff');
}

$tfRed: #cb323e;
$tfDarkRed: #aa2631;
$tfYellow: #ecc84f;
$tfPurple: #311c2d;
$tfFontSize: 22px;

$logoHeight: 125;
$logoWidth: 450;

$halftoneWidth: 237.092px;
$halftoneHeight: 4px;
$referenceWidth: 237px;
$ratio: 1.5;

$unit: 44px;

@import "_halftone.scss";
@import "_resets.scss";

// Utility classes from html5 boilerplate
.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

.clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}

// Taskfight generic classes
.tf-CenteredColumn {
  max-width: 600px;
  margin: auto;
}

.tf-ListItem {

  text-align: center;

  margin: 18px 0;
}

.tf-Input {
  line-height: $unit;
  font-size: inherit;
  font-family: inherit;
  padding: 0 0.6em;
  border: none;
  background: white;
  color: $tfPurple;
}

.tf-Button {
  font-size: 30px;
  font-family: inherit;
  border: none;
  padding: 0 0;
  text-align: center;
  line-height: $unit - 2px; // Not sure why these 2px, but they're needed for vertical alignment :/
  
  color: $tfPurple;

  &-primary { 
    background: $tfYellow;
  }

  &-transparent {
    background: transparent;
  }

  &-square {
    display: inline-block;
    height: $unit;
    width: $unit;
    text-align: center;
  }
}


// Component specific styles
.tf-Menu,
.tf-MenuToggle {
  background: $tfPurple;
  color: mix(white, $tfPurple, 60%);
}

.tf-MenuToggle {
  font-size: 16px;
  padding: 0 0.75em;
}

.tf-MenuItem {
  width: 100%; //Ensures <button> are full width... not sure why... display block should be enough
  display: block;

  background: transparent;
  color: inherit;
  font-size: inherit;
  padding: 0.7em 1em;

  border-bottom: solid 4px mix(white, $tfPurple, 10%);
}

.tf-Header {

  display: flex;
  flex-direction: column;

  &__Menu {
    order: -1;
  }

  &-noMenu .tf-Header__Menu{
    display: none;
  }
}

.tf-TitleBar {
  text-align: right;
  position: relative;
  z-index: 0;

  &::before {
    content: "";
    display: block;
    height: $unit;
    background: $tfPurple;
    position: absolute;
    left: 0;
    right: 0;
    z-index: -1;
  }
}

.tf-Logo {
  height: 83px;
  width: 97px;
  margin-top: 0.2em;
  background: url(images/lettering-and-monogram.svg) top center no-repeat;
  background-size: 100%;
  position: absolute;
  top: 0.2em;
  left: 0;
  right: 0;
  margin: auto;
}

.tf-Monogram {
  height: 3.5em;
  margin-top: 0.2em;
}

.tf-App {
  height: 100%;
  display: flex;
  flex-direction: column;

  font-family: EvelethClean, sans-serif;
  color: $tfPurple;

  font-size: 22px;
  line-height: 1.3em;

  &__Header {
    flex: 0 auto;
  }

  &__Main {
    flex: 1;
  }
}

.tf-Stages {
  display: flex;
  flex-direction: column;

  &__Stage {
    flex: 1;
    overflow: auto;
  
    padding: 0 22px;

    color: $tfYellow;

    margin-top: 60px;

    &.tf-FightStage {
      margin-top: 0;
      padding: 0;
    }
  }

  &__Menu {
    flex: 0;
  }
}

.tf-StageNavigation {
  display: flex;
  justify-content: space-between;

  background: $tfPurple;
  color: mix(white, $tfPurple, 60%);

  line-height: $unit;
  height: $unit;
  flex-basis: $unit;
}

.tf-StageNavigationLink {
  width: $unit;
  display: block;
  text-align: center;
  color: inherit;

  &-disabled {
    color: mix(white, $tfPurple, 10%); 
  }
}

.tf-AddTaskForm {
  display: flex;
  flex-wrap: wrap;

  margin-top: 1.5em;
  margin-bottom: 3em;

  &__Error {
    flex: 0 0 100%;
  }
  
  &__Input {
    flex: 1;
  }

  &__Button {
    flex-shrink: 0;
    flex-grow: 0;
  }
}

.tf-TaskListItem {

  display: flex;
  justify-content: center;
  align-content: center;
  min-height: $unit;

  &__Text {
    // Make space for the button so the text doesn't shuffle on hover
    max-width: calc(100% - #{$unit});
    align-self: center;
  }

  &:not(:hover) &__Button {
    display: none;
  }
}

.tf-FightStage {
  display: flex;
  flex-wrap: wrap;
  position: relative;

  &__Task {
    flex: 1;
  }

  &__Separator {
    flex: 0;
  }

  &__Progress {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

.tf-Progress {
  height: 4px;
  overflow: hidden;
  background: $tfPurple;
}

.tf-ProgressValue {
  padding-top: 4px;
  background: $tfYellow;
  min-width: 3px;
  position: absolute;
  left: 0;
  top: 0;
}

.tf-Task {
  padding: 1em 2em;
  overflow: hidden;
}

.tf-Task,
.tf-FightSeparator {
  display: flex;
  align-content: center;
  justify-content: space-around;
  flex-direction: column;
  text-align: center;
}

.tf-FightSeparator {
  color: $tfPurple;
  text-align: center;

  position: relative;

  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;

    left: 50%;
    right: auto;
    transform: translateX(-50%);
    width: 4px;

    
    background: $tfPurple;
  }

  &::before {
    top: 60px;
    bottom: calc(50% + 1.5em);
  }

  &::after {
    top: calc(50% + 1.5em);
    bottom: 22px;
  }
}

@media only screen and (max-aspect-ratio: 1/1) {
  .tf-FightStage {
    flex-direction: column;
  }

  .tf-Task {

    margin: 44px 0;
  }

  .tf-FightSeparator {
    &::before,
    &::after {
      top: 50%;
      bottom: auto;
      transform: translateY(-50%);
      height: 4px;
      width: auto;
    }
  

    &::before {

      left: 0;
      right: 60%;
    }

    &::after {
      left: 60%;
      right: 0;
    }
  }
}

.tf-ResultStage {
  counter-reset: ranking;
  text-align: center;
}

.tf-ResultStage__Task {

  &:nth-child(1) {
    font-size: 36px;
    line-height: 1.3em;
  }

  &:nth-child(2) {
    font-size: 30px;
  }

  &:nth-child(3) {
    font-size: 24px;
  }

  &::before {
    display:block;
    counter-increment: ranking;
    content: counter(ranking) ". ";
    color: $tfPurple;
  }
}
